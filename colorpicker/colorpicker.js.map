{"version":3,"file":"colorpicker.js","sourceRoot":"","sources":["../../../src/lib/colorpicker/colorpicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  Optional,\r\n  EventEmitter,\r\n  Renderer,\r\n  Self,\r\n  ViewChildren,\r\n  QueryList,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport {\r\n  ControlValueAccessor,\r\n  NgControl,\r\n} from '@angular/forms';\r\nimport {\r\n  Overlay,\r\n  OverlayState,\r\n  OverlayRef,\r\n  Portal,\r\n  TemplatePortal,\r\n  TemplatePortalDirective,\r\n  HorizontalConnectionPos,\r\n  VerticalConnectionPos,\r\n} from '../core';\r\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ENTER, SPACE } from '../core/keyboard/keycodes';\r\nimport { ColorLocale } from './color-locale';\r\nimport { ColorUtil, Rgba } from './color-util';\r\nimport { Container, PanelPositionX, PanelPositionY } from '../datepicker/datepicker';\r\n\r\n/** Change event object emitted by Md2Colorpicker. */\r\nexport class Md2ColorChange {\r\n  constructor(public source: Md2Colorpicker, public color: string) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-colorpicker',\r\n  templateUrl: 'colorpicker.html',\r\n  styleUrls: ['colorpicker.css'],\r\n  host: {\r\n    'role': 'colorpicker',\r\n    '[attr.aria-label]': 'placeholder',\r\n    '[attr.aria-required]': 'required.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-invalid]': '_control?.invalid || \"false\"',\r\n    '[class.md2-colorpicker-disabled]': 'disabled',\r\n    '(window:resize)': '_handleWindowResize($event)'\r\n  },\r\n  animations: [\r\n    trigger('fadeInContent', [\r\n      state('showing', style({ opacity: 1 })),\r\n      transition('void => showing', [\r\n        style({ opacity: 0 }),\r\n        animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\r\n      ])\r\n    ])\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Md2Colorpicker implements OnDestroy, ControlValueAccessor {\r\n\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef;\r\n  private _backdropSubscription: Subscription;\r\n  private _positionSubscription: Subscription;\r\n\r\n  /** Whether or not the overlay panel is open. */\r\n  private _panelOpen = false;\r\n\r\n  private _value: string = null;\r\n  private _color: string = null;\r\n  _isDark: boolean = false;\r\n\r\n  /** Whether filling out the select is required in the form.  */\r\n  private _required: boolean = false;\r\n\r\n  /** Whether the select is disabled.  */\r\n  private _disabled: boolean = false;\r\n\r\n  /** Whether the select is disabled.  */\r\n  private _format: string;\r\n\r\n  /** The placeholder displayed in the trigger of the select. */\r\n  private _placeholder: string;\r\n\r\n  private _container: Container = 'inline';\r\n  private _openOnFocus: boolean = false;\r\n\r\n  /** Position of the menu in the X axis. */\r\n  positionX: PanelPositionX = 'after';\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  positionY: PanelPositionY = 'below';\r\n\r\n  overlapTrigger: boolean = true;\r\n\r\n  _formats: Array<string> = ['hex', 'rgb', 'hsl'];\r\n  _inputFocused: boolean = false;\r\n\r\n  _onChange = (value: any) => { };\r\n  _onTouched = () => { };\r\n\r\n  constructor(private _element: ElementRef, private overlay: Overlay,\r\n    private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\r\n    private _locale: ColorLocale, private _util: ColorUtil,\r\n    @Self() @Optional() public _control: NgControl) {\r\n    if (this._control) {\r\n      this._control.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { this.destroyPanel(); }\r\n\r\n  /** Event emitted when the select has been opened. */\r\n  @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the select has been closed. */\r\n  @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the selected date has been changed by the user. */\r\n  @Output() change: EventEmitter<Md2ColorChange> = new EventEmitter<Md2ColorChange>();\r\n\r\n  @ViewChildren(TemplatePortalDirective) templatePortals: QueryList<Portal<any>>;\r\n\r\n  @Input()\r\n  get format() { return this._format || this._locale.formatColor; }\r\n  set format(value: string) {\r\n    if (this._format !== value) {\r\n      this._format = value;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get value() { return this._value; }\r\n  set value(value: string) {\r\n    if (value && this._value !== value) {\r\n      this._value = value;\r\n    } else {\r\n      this._value = this._locale.defaultColor;\r\n    }\r\n    let hsva = this._util.stringToHsva(this._value);\r\n    let rgba = this._util.denormalizeRGBA(this._util.hsvaToRgba(hsva));\r\n    let rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);\r\n    this._value = this._util.outputFormat(hsva, this._locale.formatColor);\r\n    if (Math.round((rgbaText.r * 299 + rgbaText.g * 587 + rgbaText.b * 114) / 1000) >= 128\r\n      || hsva.a < 0.35) {\r\n      this._isDark = true;\r\n    } else {\r\n      this._isDark = false;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get color() { return this._color; }\r\n  set color(value: string) { this._color = value; }\r\n\r\n  @Input()\r\n  get container() { return this._container; }\r\n  set container(value: Container) {\r\n    if (this._container !== value) {\r\n      this._container = value || 'inline';\r\n      this.destroyPanel();\r\n    }\r\n  }\r\n\r\n  /** Placeholder to be shown if no value has been selected. */\r\n  @Input()\r\n  get placeholder() { return this._placeholder; }\r\n  set placeholder(value: string) { this._placeholder = value; }\r\n\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value) { this._required = coerceBooleanProperty(value); }\r\n\r\n  /** Whether the component is disabled. */\r\n  @Input()\r\n  get disabled() { return this._disabled; }\r\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n  @Input() okLabel: string = 'Ok';\r\n  @Input() cancelLabel: string = 'Cancel';\r\n  @Input() tabindex: number = 0;\r\n\r\n  @Input()\r\n  get openOnFocus(): boolean { return this._openOnFocus; }\r\n  set openOnFocus(value: boolean) { this._openOnFocus = coerceBooleanProperty(value); }\r\n\r\n  @Input()\r\n  set isOpen(value: boolean) {\r\n    if (value && !this.panelOpen) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /** Whether or not the overlay panel is open. */\r\n  get panelOpen(): boolean { return this._panelOpen; }\r\n\r\n  /** Toggles the overlay panel open or closed. */\r\n  toggle(): void {\r\n    this.panelOpen ? this.close() : this.open();\r\n  }\r\n\r\n  /** Opens the overlay panel. */\r\n  open(): void {\r\n    if (this.disabled) { return; }\r\n    this._createOverlay();\r\n    this._overlayRef.attach(this.templatePortals.first);\r\n    this._subscribeToBackdrop();\r\n    this._panelOpen = true;\r\n    this.value = this.color;\r\n  }\r\n\r\n  /** Closes the overlay panel and focuses the host element. */\r\n  close(): void {\r\n    this._panelOpen = false;\r\n    // if (!this._color) {\r\n    //  this._placeholderState = '';\r\n    // }\r\n    this._focusHost();\r\n    if (this._overlayRef) {\r\n      this._overlayRef.detach();\r\n      this._backdropSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /** Removes the panel from the DOM. */\r\n  destroyPanel(): void {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n\r\n      this._cleanUpSubscriptions();\r\n    }\r\n  }\r\n\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    if (this.disabled) { return; }\r\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\r\n      this.toggle();\r\n    }\r\n  }\r\n\r\n  _onBlur() {\r\n    if (!this.panelOpen) {\r\n      this._onTouched();\r\n    }\r\n  }\r\n\r\n  _handleFocus(event: Event) {\r\n    this._inputFocused = true;\r\n  }\r\n\r\n  _handleBlur(event: Event) {\r\n    this._inputFocused = false;\r\n    if (!this.panelOpen) {\r\n      this._onTouched();\r\n    }\r\n    if (this._util.isColorValid(this.color)) { this._emitChangeEvent(); }\r\n  }\r\n\r\n  _handleWindowResize(event: Event) {\r\n    if (this.container === 'inline') {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  _onPanelDone(): void {\r\n    if (this.panelOpen) {\r\n      this._renderer.invokeElementMethod(document.querySelectorAll('.md2-colorpicker-panel')[0], 'focus');\r\n      this.onOpen.emit();\r\n    } else {\r\n      this.onClose.emit();\r\n    }\r\n  }\r\n\r\n  _setFormat(format: string) {\r\n    this._locale.formatColor = format;\r\n    let hsva = this._util.stringToHsva(this._value);\r\n    if (this._locale.formatColor === 'hex' && hsva.a < 1) {\r\n      this._locale.formatColor = 'rgb';\r\n    }\r\n    this._value = this._util.outputFormat(hsva, this._locale.formatColor);\r\n  }\r\n\r\n  _spectrumColorChange(event: string) {\r\n    this.value = event;\r\n  }\r\n\r\n  _clearValue(event: Event) {\r\n    event.stopPropagation();\r\n    this.color = null;\r\n  }\r\n\r\n  _onClickOk(): void {\r\n    this.color = this.value;\r\n    this._emitChangeEvent();\r\n    this.close();\r\n  }\r\n\r\n  /** Emits an event when the user selects a color. */\r\n  _emitChangeEvent(): void {\r\n    this._onChange(this.color);\r\n    this.change.emit(new Md2ColorChange(this, this.color));\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.color = value;\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  /** Focuses the host element when the panel closes. */\r\n  private _focusHost(): void {\r\n    this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\r\n  }\r\n\r\n  private _subscribeToBackdrop(): void {\r\n    this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   *  This method creates the overlay from the provided panel's template and saves its\r\n   *  OverlayRef so that it can be attached to the DOM when open is called.\r\n   */\r\n  private _createOverlay(): void {\r\n    if (!this._overlayRef) {\r\n      let config = new OverlayState();\r\n      if (this.container === 'inline') {\r\n        const [posX, fallbackX]: HorizontalConnectionPos[] =\r\n          this.positionX === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n        const [overlayY, fallbackOverlayY]: VerticalConnectionPos[] =\r\n          this.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n        let originY = overlayY;\r\n        let fallbackOriginY = fallbackOverlayY;\r\n\r\n        if (!this.overlapTrigger) {\r\n          originY = overlayY === 'top' ? 'bottom' : 'top';\r\n          fallbackOriginY = fallbackOverlayY === 'top' ? 'bottom' : 'top';\r\n        }\r\n        config.positionStrategy = this.overlay.position().connectedTo(this._element,\r\n          { originX: posX, originY: originY },\r\n          { overlayX: posX, overlayY: overlayY })\r\n          .withFallbackPosition(\r\n          { originX: fallbackX, originY: originY },\r\n          { overlayX: fallbackX, overlayY: overlayY })\r\n          .withFallbackPosition(\r\n          { originX: posX, originY: fallbackOriginY },\r\n          { overlayX: posX, overlayY: fallbackOverlayY })\r\n          .withFallbackPosition(\r\n          { originX: fallbackX, originY: fallbackOriginY },\r\n          { overlayX: fallbackX, overlayY: fallbackOverlayY });\r\n        config.hasBackdrop = true;\r\n        config.backdropClass = 'cdk-overlay-transparent-backdrop';\r\n      } else {\r\n        config.positionStrategy = this.overlay.position()\r\n          .global()\r\n          .centerHorizontally()\r\n          .centerVertically();\r\n        config.hasBackdrop = true;\r\n      }\r\n      this._overlayRef = this.overlay.create(config);\r\n    }\r\n  }\r\n\r\n  private _cleanUpSubscriptions(): void {\r\n    if (this._backdropSubscription) {\r\n      this._backdropSubscription.unsubscribe();\r\n    }\r\n    if (this._positionSubscription) {\r\n      this._positionSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n"]}