{"version":3,"file":"compatibility.js","sourceRoot":"","sources":["../../../../src/lib/core/compatibility/compatibility.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EACL,QAAQ,EAER,SAAS,EACT,WAAW,EACX,MAAM,EACN,QAAQ,EACR,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,QAAQ,EAAC,MAAM,2BAA2B,CAAC;AAGnD,MAAM,CAAC,IAAM,2BAA2B,GAAG,IAAI,WAAW,CAAC,uBAAuB,CAAC,CAAC;AAEpF,iGAAiG;AACjG,MAAM,CAAC,IAAM,qBAAqB,GAAG,+mCA0DzB,CAAC;AAEb,iGAAiG;AACjG,MAAM,CAAC,IAAM,oBAAoB,GAAG,qjCA0DzB,CAAC;AAEZ,qEAAqE;AAErE,IAAa,iBAAiB;IAC5B,2BAA6D,mBAA4B;QACvF,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACzB,MAAM,KAAK,CAAC,4EAA4E,CAAC,CAAC;QAC5F,CAAC;IACH,CAAC;IACH,wBAAC;AAAD,CAAC,AAND,IAMC;AANY,iBAAiB;IAD7B,SAAS,CAAC,EAAC,QAAQ,EAAE,qBAAqB,EAAC,CAAC;IAE9B,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;;GADjD,iBAAiB,CAM7B;SANY,iBAAiB;AAQ9B,oEAAoE;AAEpE,IAAa,gBAAgB;IAC3B,0BAA6D,mBAA4B;QACvF,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,CAAC,uEAAuE,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IACH,uBAAC;AAAD,CAAC,AAND,IAMC;AANY,gBAAgB;IAD5B,SAAS,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,CAAC;IAE7B,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;;GADjD,gBAAgB,CAM5B;SANY,gBAAgB;AAS7B;;;;GAIG;AAKH,IAAa,mBAAmB;IAQ9B,6BAA0C,QAAa;QACrD,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,OAAO,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACxD,OAAO,CAAC,IAAI,CACV,2DAA2D;gBAC3D,6DAA6D,CAC9D,CAAC;QACJ,CAAC;IACH,CAAC;IAdM,2BAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,qBAAmB;YAC7B,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAUH,0BAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,mBAAmB;IAJ/B,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;QACnD,OAAO,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;KAC/C,CAAC;IASa,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;;GAR9B,mBAAmB,CAgB/B;SAhBY,mBAAmB;AAmBhC;;;GAGG;AAMH,IAAa,gCAAgC;IAA7C;IAA+C,CAAC;IAAD,uCAAC;AAAD,CAAC,AAAhD,IAAgD;AAAnC,gCAAgC;IAL5C,QAAQ,CAAC;QACR,SAAS,EAAE,CAAC;gBACV,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI;aACrD,CAAC;KACH,CAAC;GACW,gCAAgC,CAAG;SAAnC,gCAAgC","sourcesContent":["import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  Directive,\r\n  OpaqueToken,\r\n  Inject,\r\n  Optional,\r\n  isDevMode,\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\n\r\n\r\nexport const MATERIAL_COMPATIBILITY_MODE = new OpaqueToken('md-compatibility-mode');\r\n\r\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\r\nexport const MAT_ELEMENTS_SELECTOR = `\r\n  [mat-button],\r\n  [mat-dialog-actions],\r\n  [mat-dialog-close],\r\n  [mat-dialog-content],\r\n  [mat-dialog-title],\r\n  [mat-fab],\r\n  [mat-icon-button],\r\n  [mat-menu-trigger-for],\r\n  [mat-mini-fab],\r\n  [mat-raised-button],\r\n  [mat-tab-label],\r\n  [mat-tab-link],\r\n  [mat-tab-nav-bar],\r\n  [matTooltip],\r\n  mat-autocomplete,\r\n  mat-button-toggle,\r\n  mat-button-toggle-group,\r\n  mat-button-toggle,\r\n  mat-card,\r\n  mat-card-actions,\r\n  mat-card-content,\r\n  mat-card-footer,\r\n  mat-card-header,\r\n  mat-card-subtitle,\r\n  mat-card-title,\r\n  mat-card-title-group,\r\n  mat-checkbox,\r\n  mat-chip,\r\n  mat-dialog-actions,\r\n  mat-dialog-container,\r\n  mat-dialog-content,\r\n  mat-divider,\r\n  mat-grid-list,\r\n  mat-grid-tile,\r\n  mat-grid-tile-footer,\r\n  mat-grid-tile-header,\r\n  mat-hint,\r\n  mat-icon,\r\n  mat-list,\r\n  mat-list-item,\r\n  mat-menu,\r\n  mat-nav-list,\r\n  mat-option,\r\n  mat-placeholder,\r\n  mat-progress-bar,\r\n  mat-progress-circle,\r\n  mat-pseudo-checkbox,\r\n  mat-radio-button,\r\n  mat-radio-group,\r\n  mat-select,\r\n  mat-sidenav,\r\n  mat-sidenav-container,\r\n  mat-slider,\r\n  mat-spinner,\r\n  mat-tab,\r\n  mat-tab-group,\r\n  mat-toolbar,\r\n  mat-error`;\r\n\r\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\r\nexport const MD_ELEMENTS_SELECTOR = `\r\n  [md-button],\r\n  [md-dialog-actions],\r\n  [md-dialog-close],\r\n  [md-dialog-content],\r\n  [md-dialog-title],\r\n  [md-fab],\r\n  [md-icon-button],\r\n  [md-menu-trigger-for],\r\n  [md-mini-fab],\r\n  [md-raised-button],\r\n  [md-tab-label],\r\n  [md-tab-link],\r\n  [md-tab-nav-bar],\r\n  [mdTooltip],\r\n  md-autocomplete,\r\n  md-button-toggle,\r\n  md-button-toggle-group,\r\n  md-button-toggle,\r\n  md-card,\r\n  md-card-actions,\r\n  md-card-content,\r\n  md-card-footer,\r\n  md-card-header,\r\n  md-card-subtitle,\r\n  md-card-title,\r\n  md-card-title-group,\r\n  md-checkbox,\r\n  md-chip,\r\n  md-dialog-actions,\r\n  md-dialog-container,\r\n  md-dialog-content,\r\n  md-divider,\r\n  md-grid-list,\r\n  md-grid-tile,\r\n  md-grid-tile-footer,\r\n  md-grid-tile-header,\r\n  md-hint,\r\n  md-icon,\r\n  md-list,\r\n  md-list-item,\r\n  md-menu,\r\n  md-nav-list,\r\n  md-option,\r\n  md-placeholder,\r\n  md-progress-bar,\r\n  md-progress-circle,\r\n  md-pseudo-checkbox,\r\n  md-radio-button,\r\n  md-radio-group,\r\n  md-select,\r\n  md-sidenav,\r\n  md-sidenav-container,\r\n  md-slider,\r\n  md-spinner,\r\n  md-tab,\r\n  md-tab-group,\r\n  md-toolbar,\r\n  md-error`;\r\n\r\n/** Directive that enforces that the `mat-` prefix cannot be used. */\r\n@Directive({selector: MAT_ELEMENTS_SELECTOR})\r\nexport class MatPrefixRejector {\r\n  constructor(@Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean) {\r\n    if (!isCompatibilityMode) {\r\n      throw Error('The \"mat-\" prefix cannot be used out of ng-material v1 compatibility mode.');\r\n    }\r\n  }\r\n}\r\n\r\n/** Directive that enforces that the `md-` prefix cannot be used. */\r\n@Directive({selector: MD_ELEMENTS_SELECTOR})\r\nexport class MdPrefixRejector {\r\n  constructor(@Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean) {\r\n    if (isCompatibilityMode) {\r\n      throw Error('The \"md-\" prefix cannot be used in ng-material v1 compatibility mode.');\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Module that enforces the default compatibility mode settings. When this module is loaded\r\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\r\n * there are any uses of the `mat-` prefix.\r\n */\r\n@NgModule({\r\n  declarations: [MatPrefixRejector, MdPrefixRejector],\r\n  exports: [MatPrefixRejector, MdPrefixRejector],\r\n})\r\nexport class CompatibilityModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CompatibilityModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @Inject(DOCUMENT) document: any) {\r\n    if (isDevMode() && typeof document && !document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\r\n * it will throw an error if there are any uses of the `md-` prefix.\r\n */\r\n@NgModule({\r\n  providers: [{\r\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\r\n  }],\r\n})\r\nexport class NoConflictStyleCompatibilityMode {}\r\n"]}