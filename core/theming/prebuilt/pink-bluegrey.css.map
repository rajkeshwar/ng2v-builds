{"version":3,"sources":["core/_core.scss","core/style/_elevation.scss","core/ripple/_ripple.scss","core/option/_option.scss","core/style/_list-common.scss","core/style/_menu-common.scss","core/style/_variables.scss","core/theming/prebuilt/pink-bluegrey.css","core/style/_vendor-prefixes.scss","core/a11y/_a11y.scss","core/overlay/_overlay.scss","core/theming/_palette.scss","core/option/_option-theme.scss","core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss"],"names":[],"mappings":"AAeI,kBCgIF,WAA4B,EAAA,EAAA,EAAA,EAAA,cAA0C,CAC3C,EAAA,EAAA,EAAA,EAAA,eAA6C,CAC7C,EAAA,EAAA,EAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,IAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,IAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,IAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,IAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,IAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,IAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,IAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,IAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,EAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,kBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,IAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,KAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,KAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,KAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,KAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBDlIzB,mBCgIF,WAA4B,EAAA,KAAA,KAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBC1I3B,YACE,SAAU,OAGZ,iCACE,SAAU,QAGZ,oBACE,SAAU,SACV,cAAe,IACf,eAAgB,KAEhB,WAAY,OAAO,CAAE,UAAU,GAAI,uBACnC,UAAW,SCZb,YCNA,YAAa,OACb,SAAU,OACV,cAAe,SCsBf,QAAS,MACT,YAlBqB,KAmBrB,OAnBqB,KAoBrB,QAAS,EAlBa,KAoBtB,UArBmB,KAsBnB,YC5BgB,MAAM,CAAE,gBAAgB,CAAE,WD6B1C,WAAY,KACZ,gBAAiB,KFxBf,SAAU,SACV,OAAQ,QACR,QAAS,EAJX,sBE6BE,OAAQ,QEyFV,sBFrFE,WAAY,MFjCd,sBEqCE,aAAc,KEqFd,gCFlFE,YAAa,KFxCjB,gCKPA,oBAAqB,KACrB,iBAAkB,KAClB,gBAAiB,KACjB,YAAa,KLYT,OAAQ,QAIZ,mBACE,SAAU,SACV,IAAK,EACL,KAAM,EACN,OAAQ,EACR,MAAO,EMNT,6CNCA,mBASI,QAAS,IAIb,4BAEE,aADS,IIqHX,sCJjHI,YAJO,IAKP,aAAc,EMvClB,qBACE,OAAQ,EACR,KAAM,cACN,OAAQ,IACR,OAAQ,KACR,SAAU,OACV,QAAS,EACT,SAAU,SACV,eAAgB,KAChB,MAAO,ICNe,4BAAxB,uBAEE,eAAgB,KAGhB,IAAK,EACL,KAAM,EACN,OAAQ,KACR,MAAO,KAIT,uBACE,SAAU,MACV,QJM4B,KIC9B,4BACE,QAAS,KACT,SAAU,SACV,QJHkB,KIOpB,kBACE,SAAU,SACV,eAAgB,KAChB,WAAY,WACZ,QJXkB,KIcpB,sBAEE,SAAU,SACV,IAAK,EACL,OAAQ,EACR,KAAM,EACN,MAAO,EAEP,QJrB2B,KIsB3B,eAAgB,KAIhB,WAAY,QJHU,IACO,2BIG7B,QAAS,EAdX,mDAiBI,QAAS,IAIb,2BACE,WJhCmC,eImCrC,kCACE,WAAY,IRnCd,oBACE,iBSypBe,qBChrBjB,4CAAA,4CAEI,WDkpBa,sBCppBjB,yBAMI,MD0CC,QChDL,mDAUM,WD0oBW,sBCppBjB,uBAeI,WDqoBa,sBCpoBb,MD0qBa,KC1rBjB,gCAoBI,MDkqBkB,qBE7qBtB,qBACE,MF6qBoB,qBE9qBtB,4BAII,MFsoBQ,QEloBZ,yCAA8B,+CAE1B,WF2BC,QE7BL,wCAA8B,8CAM1B,WF4kBC,QEllBL,sCAA8B,4CAU1B,WFdC,QEIL,0DAA8B,gEAc1B,WA1B0B,QbqB9B,oBAEE,iBWunBU","file":"pink-bluegrey.css","sourcesContent":["// Core styles that can be used to apply material design treatments to any element.\r\n@import 'a11y/a11y';\r\n@import 'style/elevation';\r\n@import 'overlay/overlay';\r\n@import 'ripple/ripple';\r\n@import 'option/option';\r\n@import 'option/option-theme';\r\n@import 'selection/pseudo-checkbox/pseudo-checkbox-theme';\r\n\r\n// Mixin that renders all of the core styles that are not theme-dependent.\r\n@mixin mat-core() {\r\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\r\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\r\n  // elevated.\r\n  @for $zValue from 0 through 24 {\r\n    .mat-elevation-z#{$zValue} {\r\n      @include mat-elevation($zValue);\r\n    }\r\n  }\r\n\r\n  @include mat-ripple();\r\n  @include mat-option();\r\n  @include cdk-a11y();\r\n  @include cdk-overlay();\r\n}\r\n\r\n// Mixin that renders all of the core styles that depend on the theme.\r\n@mixin mat-core-theme($theme) {\r\n  @include mat-ripple-theme($theme);\r\n  @include mat-option-theme($theme);\r\n  @include mat-pseudo-checkbox-theme($theme);\r\n\r\n  // Wrapper element that provides the theme background when the\r\n  // user's content isn't inside of a `md-sidenav-container`.\r\n  .mat-app-background {\r\n    $background: map-get($theme, background);\r\n    background-color: mat-color($background, background);\r\n  }\r\n}\r\n","@import 'variables';\r\n\r\n\r\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\r\n// element.\r\n// See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\r\n// Examples:\r\n//\r\n//\r\n// .mat-foo {\r\n//   @include $mat-elevation(2);\r\n//\r\n//   &:active {\r\n//     @include $mat-elevation(8);\r\n//   }\r\n// }\r\n//\r\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\r\n//\r\n// For an explanation of the design behind how elevation is implemented, see the design doc at\r\n// https://goo.gl/Kq0k9Z.\r\n\r\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\r\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\r\n// space completely obscured by an object relative to its light source), one for penumbra (the\r\n// space partially obscured by an object), and one for ambient (the space which contains the object\r\n// itself). For a further explanation of these terms and their meanings, see\r\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\r\n\r\n$_umbra-color: rgba(black, 0.2);\r\n$_penumbra-color: rgba(black, 0.14);\r\n$_ambient-color: rgba(black, 0.12);\r\n\r\n// Maps for the different shadow sets and their values within each z-space. These values were\r\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\r\n// all of the values between them.\r\n\r\n$_umbra-elevation-map: (\r\n  0: '0px 0px 0px 0px #{$_umbra-color}',\r\n  1: '0px 2px 1px -1px #{$_umbra-color}',\r\n  2: '0px 3px 1px -2px #{$_umbra-color}',\r\n  3: '0px 3px 3px -2px #{$_umbra-color}',\r\n  4: '0px 2px 4px -1px #{$_umbra-color}',\r\n  5: '0px 3px 5px -1px #{$_umbra-color}',\r\n  6: '0px 3px 5px -1px #{$_umbra-color}',\r\n  7: '0px 4px 5px -2px #{$_umbra-color}',\r\n  8: '0px 5px 5px -3px #{$_umbra-color}',\r\n  9: '0px 5px 6px -3px #{$_umbra-color}',\r\n  10: '0px 6px 6px -3px #{$_umbra-color}',\r\n  11: '0px 6px 7px -4px #{$_umbra-color}',\r\n  12: '0px 7px 8px -4px #{$_umbra-color}',\r\n  13: '0px 7px 8px -4px #{$_umbra-color}',\r\n  14: '0px 7px 9px -4px #{$_umbra-color}',\r\n  15: '0px 8px 9px -5px #{$_umbra-color}',\r\n  16: '0px 8px 10px -5px #{$_umbra-color}',\r\n  17: '0px 8px 11px -5px #{$_umbra-color}',\r\n  18: '0px 9px 11px -5px #{$_umbra-color}',\r\n  19: '0px 9px 12px -6px #{$_umbra-color}',\r\n  20: '0px 10px 13px -6px #{$_umbra-color}',\r\n  21: '0px 10px 13px -6px #{$_umbra-color}',\r\n  22: '0px 10px 14px -6px #{$_umbra-color}',\r\n  23: '0px 11px 14px -7px #{$_umbra-color}',\r\n  24: '0px 11px 15px -7px #{$_umbra-color}'\r\n);\r\n\r\n$_penumbra-elevation-map: (\r\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\r\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\r\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\r\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\r\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\r\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\r\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\r\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\r\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\r\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\r\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\r\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\r\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\r\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\r\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\r\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\r\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\r\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\r\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\r\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\r\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\r\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\r\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\r\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\r\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\r\n);\r\n\r\n$_ambient-elevation-map: (\r\n  0: '0px 0px 0px 0px #{$_ambient-color}',\r\n  1: '0px 1px 3px 0px #{$_ambient-color}',\r\n  2: '0px 1px 5px 0px #{$_ambient-color}',\r\n  3: '0px 1px 8px 0px #{$_ambient-color}',\r\n  4: '0px 1px 10px 0px #{$_ambient-color}',\r\n  5: '0px 1px 14px 0px #{$_ambient-color}',\r\n  6: '0px 1px 18px 0px #{$_ambient-color}',\r\n  7: '0px 2px 16px 1px #{$_ambient-color}',\r\n  8: '0px 3px 14px 2px #{$_ambient-color}',\r\n  9: '0px 3px 16px 2px #{$_ambient-color}',\r\n  10: '0px 4px 18px 3px #{$_ambient-color}',\r\n  11: '0px 4px 20px 3px #{$_ambient-color}',\r\n  12: '0px 5px 22px 4px #{$_ambient-color}',\r\n  13: '0px 5px 24px 4px #{$_ambient-color}',\r\n  14: '0px 5px 26px 4px #{$_ambient-color}',\r\n  15: '0px 6px 28px 5px #{$_ambient-color}',\r\n  16: '0px 6px 30px 5px #{$_ambient-color}',\r\n  17: '0px 6px 32px 5px #{$_ambient-color}',\r\n  18: '0px 7px 34px 6px #{$_ambient-color}',\r\n  19: '0px 7px 36px 6px #{$_ambient-color}',\r\n  20: '0px 8px 38px 7px #{$_ambient-color}',\r\n  21: '0px 8px 40px 7px #{$_ambient-color}',\r\n  22: '0px 8px 42px 7px #{$_ambient-color}',\r\n  23: '0px 9px 44px 8px #{$_ambient-color}',\r\n  24: '0px 9px 46px 8px #{$_ambient-color}'\r\n);\r\n\r\n\r\n// The css property used for elevation. In most cases this should not be changed. It is exposed\r\n// as a variable for abstraction / easy use when needing to reference the property directly, for\r\n// example in a will-change rule.\r\n$mat-elevation-property: box-shadow !default;\r\n\r\n// The default duration value for elevation transitions.\r\n$mat-elevation-transition-duration: 280ms !default;\r\n\r\n// The default easing value for elevation transitions.\r\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\r\n\r\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\r\n// The $zValue must be between 0 and 24.\r\n@mixin mat-elevation($zValue) {\r\n  @if type-of($zValue) != number or not unitless($zValue) {\r\n    @error '$zValue must be a unitless number';\r\n  }\r\n  @if $zValue < 0 or $zValue > 24 {\r\n    @error '$zValue must be between 0 and 24';\r\n  }\r\n\r\n  #{$mat-elevation-property}: #{map-get($_umbra-elevation-map, $zValue)},\r\n                             #{map-get($_penumbra-elevation-map, $zValue)},\r\n                             #{map-get($_ambient-elevation-map, $zValue)};\r\n}\r\n\r\n// Returns a string that can be used as the value for a transition property for elevation.\r\n// Calling this function directly is useful in situations where a component needs to transition\r\n// more than one property.\r\n//\r\n// .foo {\r\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\r\n//   will-change: $mat-elevation-property, opacity;\r\n// }\r\n@function mat-elevation-transition-property-value(\r\n    $duration: $mat-elevation-transition-duration,\r\n    $easing: $mat-elevation-transition-timing-function) {\r\n  @return #{$mat-elevation-property} #{$duration} #{$easing};\r\n}\r\n\r\n// Applies the correct css rules needed to have an element transition between elevations.\r\n// This mixin should be applied to elements whose elevation values will change depending on their\r\n// context (e.g. when active or disabled).\r\n//\r\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\r\n// be used in the same way by clients.\r\n@mixin mat-elevation-transition(\r\n    $duration: $mat-elevation-transition-duration,\r\n    $easing: $mat-elevation-transition-timing-function) {\r\n  transition: mat-elevation-transition-property-value($duration, $easing);\r\n  will-change: $mat-elevation-property;\r\n}\r\n","@import '../theming/theming';\r\n\r\n$mat-ripple-color-opacity: 0.1;\r\n\r\n@mixin mat-ripple() {\r\n  // The host element of an md-ripple directive should always have a position of \"absolute\" or\r\n  // \"relative\" so that the ripple divs it creates inside itself are correctly positioned.\r\n  .mat-ripple {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .mat-ripple.mat-ripple-unbounded {\r\n    overflow: visible;\r\n  }\r\n\r\n  .mat-ripple-element {\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n\r\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\r\n    transform: scale(0);\r\n  }\r\n}\r\n\r\n/* Theme for the ripple elements.*/\r\n@mixin mat-ripple-theme($theme) {\r\n  $foreground: map_get($theme, foreground);\r\n  $foreground-base: map_get($foreground, base);\r\n\r\n  .mat-ripple-element {\r\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\r\n  }\r\n}\r\n\r\n\r\n// A mixin, which generates temporary ink ripple on a given component.\r\n// To be removed once the real ripple is applied to all elements.\r\n// When $bindToParent is set to true, it will check for the focused class on the same selector as you included\r\n// that mixin.\r\n// It is also possible to specify the color palette of the temporary ripple. By default it uses the\r\n// accent palette for its background.\r\n@mixin mat-temporary-ink-ripple($component, $bindToParent: false) {\r\n  // TODO(mtlin): Replace when ink ripple component is implemented.\r\n  // A placeholder ink ripple, shown when keyboard focused.\r\n  .mat-ink-ripple {\r\n    border-radius: 50%;\r\n    opacity: 0;\r\n    height: 48px;\r\n    left: 50%;\r\n    overflow: hidden;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity ease 280ms, background-color ease 280ms;\r\n    width: 48px;\r\n  }\r\n\r\n  // Fade in when radio focused.\r\n  #{if($bindToParent, '&', '')}.mat-#{$component}-focused .mat-ink-ripple {\r\n    opacity: 1;\r\n  }\r\n\r\n  // TODO(mtlin): This corresponds to disabled focus state, but it's unclear how to enter into\r\n  // this state.\r\n  #{if($bindToParent, '&', '')}.mat-#{$component}-disabled .mat-ink-ripple {\r\n    background-color: #000;\r\n  }\r\n}\r\n","@import '../style/menu-common';\r\n@import '../style/vendor-prefixes';\r\n@import '../a11y/a11y';\r\n\r\n/**\r\n * This mixin contains shared option styles between the select and\r\n * autocomplete components.\r\n */\r\n@mixin mat-option() {\r\n  .mat-option {\r\n    @include mat-menu-item-base();\r\n    position: relative;\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    &[aria-disabled='true'] {\r\n      @include user-select(none);\r\n      cursor: default;\r\n    }\r\n  }\r\n\r\n  .mat-option-ripple {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n\r\n    // In high contrast mode this completely covers the text.\r\n    @include cdk-high-contrast {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  .mat-option-pseudo-checkbox {\r\n    $margin: $mat-menu-side-padding / 2;\r\n    margin-right: $margin;\r\n\r\n    [dir='rtl'] & {\r\n      margin-left: $margin;\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\r\n// truncate neatly with an ellipsis.\r\n@mixin mat-truncate-line() {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\r\n// is in dense mode.\r\n@mixin mat-line-base($secondary-font-size) {\r\n  .mat-line {\r\n    @include mat-truncate-line();\r\n    display: block;\r\n    box-sizing: border-box;\r\n\r\n    // all lines but the top line should have smaller text\r\n    &:nth-child(n+2) {\r\n      font-size: $secondary-font-size;\r\n    }\r\n  }\r\n}\r\n\r\n// This mixin normalizes default element styles, e.g. font weight for heading text.\r\n@mixin mat-normalize-text() {\r\n  & > * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: normal;\r\n    font-size: inherit;\r\n  }\r\n}\r\n\r\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\r\n@mixin mat-line-wrapper-base() {\r\n  @include mat-normalize-text();\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n\r\n  // Must remove wrapper when lines are empty or it takes up horizontal\r\n  // space and pushes other elements to the right.\r\n  &:empty {\r\n    display: none;\r\n  }\r\n}\r\n","@import './variables';\r\n@import './elevation';\r\n@import './list-common';\r\n\r\n/** The mixins below are shared between md-menu and md-select */\r\n\r\n// menu width must be a multiple of 56px\r\n$mat-menu-overlay-min-width: 112px !default;   // 56 * 2\r\n$mat-menu-overlay-max-width: 280px !default;   // 56 * 5\r\n\r\n$mat-menu-item-height: 48px !default;\r\n$mat-menu-font-size: 16px !default;\r\n$mat-menu-side-padding: 16px !default;\r\n\r\n@mixin mat-menu-base() {\r\n  @include mat-elevation(8);\r\n  min-width: $mat-menu-overlay-min-width;\r\n  max-width: $mat-menu-overlay-max-width;\r\n\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch;   // for momentum scroll on mobile\r\n}\r\n\r\n@mixin mat-menu-item-base() {\r\n  @include mat-truncate-line();\r\n\r\n  // Needs to be a block for the ellipsis to work.\r\n  display: block;\r\n  line-height: $mat-menu-item-height;\r\n  height: $mat-menu-item-height;\r\n  padding: 0 $mat-menu-side-padding;\r\n\r\n  font-size: $mat-menu-font-size;\r\n  font-family: $mat-font-family;\r\n  text-align: left;\r\n  text-decoration: none;   // necessary to reset anchor tags\r\n\r\n  &[disabled] {\r\n    cursor: default;\r\n  }\r\n\r\n  [dir='rtl'] & {\r\n    text-align: right;\r\n  }\r\n\r\n  .mat-icon {\r\n    margin-right: 16px;\r\n\r\n    [dir='rtl'] & {\r\n      margin-left: 16px;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This mixin adds the correct panel transform styles based\r\n * on the direction that the menu panel opens.\r\n */\r\n@mixin mat-menu-positions() {\r\n  &.mat-menu-after.mat-menu-below {\r\n    transform-origin: left top;\r\n  }\r\n\r\n  &.mat-menu-after.mat-menu-above {\r\n    transform-origin: left bottom;\r\n  }\r\n\r\n  &.mat-menu-before.mat-menu-below {\r\n    transform-origin: right top;\r\n  }\r\n\r\n  &.mat-menu-before.mat-menu-above {\r\n    transform-origin: right bottom;\r\n  }\r\n\r\n  [dir='rtl'] & {\r\n    &.mat-menu-after.mat-menu-below {\r\n      transform-origin: right top;\r\n    }\r\n\r\n    &.mat-menu-after.mat-menu-above {\r\n      transform-origin: right bottom;\r\n    }\r\n\r\n    &.mat-menu-before.mat-menu-below {\r\n      transform-origin: left top;\r\n    }\r\n\r\n    &.mat-menu-before.mat-menu-above {\r\n      transform-origin: left bottom;\r\n    }\r\n  }\r\n}\r\n","@import '../typography/typography';\r\n\r\n\r\n// Typography\r\n$mat-body-font-size-base: rem(1.4) !default;\r\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\r\n\r\n// Media queries\r\n// TODO: Find a way to respect media query ranges.\r\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\r\n$mat-xsmall: 'max-width: 600px';\r\n$mat-small: 'max-width: 960px';\r\n\r\n// TODO: Revisit all z-indices before beta\r\n// z-index master list\r\n\r\n$z-index-fab: 20 !default;\r\n$z-index-drawer: 100 !default;\r\n\r\n// Overlay z indices.\r\n\r\n// We want overlays to always appear over user content, so set a baseline\r\n// very high z-index for the overlay container, which is where we create the new\r\n// stacking context for all overlays.\r\n$cdk-z-index-overlay-container: 1000;\r\n$cdk-z-index-overlay: 1000;\r\n$cdk-z-index-overlay-backdrop: 1000;\r\n\r\n// Background color for all of the backdrops\r\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\r\n\r\n// Global constants\r\n$pi: 3.14159265;\r\n\r\n// Padding between input toggles and their labels\r\n$mat-toggle-padding: 8px !default;\r\n// Width and height of input toggles\r\n$mat-toggle-size: 20px !default;\r\n\r\n// Easing Curves\r\n// TODO(jelbourn): all of these need to be revisited\r\n\r\n// The default animation curves used by material design.\r\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\r\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\r\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\r\n\r\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n\r\n$swift-ease-out-duration: 400ms !default;\r\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\r\n\r\n$swift-ease-in-duration: 300ms !default;\r\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\r\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\r\n\r\n$swift-ease-in-out-duration: 500ms !default;\r\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\r\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\r\n\r\n$swift-linear-duration: 80ms !default;\r\n$swift-linear-timing-function: linear !default;\r\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\r\n",null,"/* stylelint-disable material/no-prefixes */\r\n@mixin user-select($value) {\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n@mixin input-placeholder {\r\n  &::placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-moz-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-webkit-input-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &:-ms-input-placeholder {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin cursor-grab {\r\n  cursor: -webkit-grab;\r\n  cursor: grab;\r\n}\r\n/* stylelint-enable */\r\n","@mixin cdk-a11y {\r\n  .cdk-visually-hidden {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    text-transform: none;\r\n    width: 1px;\r\n  }\r\n}\r\n\r\n/**\r\n * Applies styles for users in high contrast mode. Note that this only applies\r\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\r\n * attribute, however Chrome handles high contrast differently.\r\n */\r\n@mixin cdk-high-contrast {\r\n  @media screen and (-ms-high-contrast: active) {\r\n    @content;\r\n  }\r\n}\r\n","@import '../style/variables';\r\n\r\n\r\n@mixin cdk-overlay() {\r\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\r\n    // Disable events from being captured on the overlay container.\r\n    pointer-events: none;\r\n\r\n    // The container should be the size of the viewport.\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  // The overlay-container is an invisible element which contains all individual overlays.\r\n  .cdk-overlay-container {\r\n    position: fixed;\r\n    z-index: $cdk-z-index-overlay-container;\r\n  }\r\n\r\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\r\n  // This makes centering the overlay easy without running into the subpixel rendering\r\n  // problems tied to using `transform` and without interfering with the other position\r\n  // strategies.\r\n  .cdk-global-overlay-wrapper {\r\n    display: flex;\r\n    position: absolute;\r\n    z-index: $cdk-z-index-overlay;\r\n  }\r\n\r\n  // A single overlay pane.\r\n  .cdk-overlay-pane {\r\n    position: absolute;\r\n    pointer-events: auto;\r\n    box-sizing: border-box;\r\n    z-index: $cdk-z-index-overlay;\r\n  }\r\n\r\n  .cdk-overlay-backdrop {\r\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    z-index: $cdk-z-index-overlay-backdrop;\r\n    pointer-events: auto;\r\n\r\n    // TODO(jelbourn): figure out if there are actually spec'ed colors for both light and dark\r\n    // themes here. Currently using the values from AngularJS Material.\r\n    transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function;\r\n    opacity: 0;\r\n\r\n    &.cdk-overlay-backdrop-showing {\r\n      opacity: 0.48;\r\n    }\r\n  }\r\n\r\n  .cdk-overlay-dark-backdrop {\r\n    background: $cdk-overlay-dark-backdrop-background;\r\n  }\r\n\r\n  .cdk-overlay-transparent-backdrop {\r\n    background: none;\r\n  }\r\n}\r\n","// Color palettes from the Material Design spec.\r\n// See https://www.google.com/design/spec/style/color.html\r\n//\r\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\r\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\r\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\r\n\r\n\r\n$black-87-opacity: rgba(black, 0.87);\r\n$white-87-opacity: rgba(white, 0.87);\r\n$black-12-opacity: rgba(black, 0.12);\r\n$white-12-opacity: rgba(white, 0.12);\r\n$black-6-opacity: rgba(black, 0.06);\r\n$white-6-opacity: rgba(white, 0.06);\r\n\r\n$mat-red: (\r\n  50: #ffebee,\r\n  100: #ffcdd2,\r\n  200: #ef9a9a,\r\n  300: #e57373,\r\n  400: #ef5350,\r\n  500: #f44336,\r\n  600: #e53935,\r\n  700: #d32f2f,\r\n  800: #c62828,\r\n  900: #b71c1c,\r\n  A100: #ff8a80,\r\n  A200: #ff5252,\r\n  A400: #ff1744,\r\n  A700: #d50000,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: white,\r\n    A400: white,\r\n    A700: white,\r\n  )\r\n);\r\n\r\n$mat-pink: (\r\n  50: #fce4ec,\r\n  100: #f8bbd0,\r\n  200: #f48fb1,\r\n  300: #f06292,\r\n  400: #ec407a,\r\n  500: #e91e63,\r\n  600: #d81b60,\r\n  700: #c2185b,\r\n  800: #ad1457,\r\n  900: #880e4f,\r\n  A100: #ff80ab,\r\n  A200: #ff4081,\r\n  A400: #f50057,\r\n  A700: #c51162,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: white,\r\n    A400: white,\r\n    A700: white,\r\n  )\r\n);\r\n\r\n$mat-purple: (\r\n  50: #f3e5f5,\r\n  100: #e1bee7,\r\n  200: #ce93d8,\r\n  300: #ba68c8,\r\n  400: #ab47bc,\r\n  500: #9c27b0,\r\n  600: #8e24aa,\r\n  700: #7b1fa2,\r\n  800: #6a1b9a,\r\n  900: #4a148c,\r\n  A100: #ea80fc,\r\n  A200: #e040fb,\r\n  A400: #d500f9,\r\n  A700: #aa00ff,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: white,\r\n    400: white,\r\n    500: $white-87-opacity,\r\n    600: $white-87-opacity,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: white,\r\n    A400: white,\r\n    A700: white,\r\n  )\r\n);\r\n\r\n$mat-deep-purple: (\r\n  50: #ede7f6,\r\n  100: #d1c4e9,\r\n  200: #b39ddb,\r\n  300: #9575cd,\r\n  400: #7e57c2,\r\n  500: #673ab7,\r\n  600: #5e35b1,\r\n  700: #512da8,\r\n  800: #4527a0,\r\n  900: #311b92,\r\n  A100: #b388ff,\r\n  A200: #7c4dff,\r\n  A400: #651fff,\r\n  A700: #6200ea,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: white,\r\n    400: white,\r\n    500: $white-87-opacity,\r\n    600: $white-87-opacity,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: white,\r\n    A400: $white-87-opacity,\r\n    A700: $white-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-indigo: (\r\n  50: #e8eaf6,\r\n  100: #c5cae9,\r\n  200: #9fa8da,\r\n  300: #7986cb,\r\n  400: #5c6bc0,\r\n  500: #3f51b5,\r\n  600: #3949ab,\r\n  700: #303f9f,\r\n  800: #283593,\r\n  900: #1a237e,\r\n  A100: #8c9eff,\r\n  A200: #536dfe,\r\n  A400: #3d5afe,\r\n  A700: #304ffe,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: white,\r\n    400: white,\r\n    500: $white-87-opacity,\r\n    600: $white-87-opacity,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: white,\r\n    A400: white,\r\n    A700: $white-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-blue: (\r\n  50: #e3f2fd,\r\n  100: #bbdefb,\r\n  200: #90caf9,\r\n  300: #64b5f6,\r\n  400: #42a5f5,\r\n  500: #2196f3,\r\n  600: #1e88e5,\r\n  700: #1976d2,\r\n  800: #1565c0,\r\n  900: #0d47a1,\r\n  A100: #82b1ff,\r\n  A200: #448aff,\r\n  A400: #2979ff,\r\n  A700: #2962ff,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: white,\r\n    A400: white,\r\n    A700: white,\r\n  )\r\n);\r\n\r\n$mat-light-blue: (\r\n  50: #e1f5fe,\r\n  100: #b3e5fc,\r\n  200: #81d4fa,\r\n  300: #4fc3f7,\r\n  400: #29b6f6,\r\n  500: #03a9f4,\r\n  600: #039be5,\r\n  700: #0288d1,\r\n  800: #0277bd,\r\n  900: #01579b,\r\n  A100: #80d8ff,\r\n  A200: #40c4ff,\r\n  A400: #00b0ff,\r\n  A700: #0091ea,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: white,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: white,\r\n  )\r\n);\r\n\r\n$mat-cyan: (\r\n  50: #e0f7fa,\r\n  100: #b2ebf2,\r\n  200: #80deea,\r\n  300: #4dd0e1,\r\n  400: #26c6da,\r\n  500: #00bcd4,\r\n  600: #00acc1,\r\n  700: #0097a7,\r\n  800: #00838f,\r\n  900: #006064,\r\n  A100: #84ffff,\r\n  A200: #18ffff,\r\n  A400: #00e5ff,\r\n  A700: #00b8d4,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: white,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-teal: (\r\n  50: #e0f2f1,\r\n  100: #b2dfdb,\r\n  200: #80cbc4,\r\n  300: #4db6ac,\r\n  400: #26a69a,\r\n  500: #009688,\r\n  600: #00897b,\r\n  700: #00796b,\r\n  800: #00695c,\r\n  900: #004d40,\r\n  A100: #a7ffeb,\r\n  A200: #64ffda,\r\n  A400: #1de9b6,\r\n  A700: #00bfa5,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-green: (\r\n  50: #e8f5e9,\r\n  100: #c8e6c9,\r\n  200: #a5d6a7,\r\n  300: #81c784,\r\n  400: #66bb6a,\r\n  500: #4caf50,\r\n  600: #43a047,\r\n  700: #388e3c,\r\n  800: #2e7d32,\r\n  900: #1b5e20,\r\n  A100: #b9f6ca,\r\n  A200: #69f0ae,\r\n  A400: #00e676,\r\n  A700: #00c853,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-light-green: (\r\n  50: #f1f8e9,\r\n  100: #dcedc8,\r\n  200: #c5e1a5,\r\n  300: #aed581,\r\n  400: #9ccc65,\r\n  500: #8bc34a,\r\n  600: #7cb342,\r\n  700: #689f38,\r\n  800: #558b2f,\r\n  900: #33691e,\r\n  A100: #ccff90,\r\n  A200: #b2ff59,\r\n  A400: #76ff03,\r\n  A700: #64dd17,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: $black-87-opacity,\r\n    800: white,\r\n    900: white,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-lime: (\r\n  50: #f9fbe7,\r\n  100: #f0f4c3,\r\n  200: #e6ee9c,\r\n  300: #dce775,\r\n  400: #d4e157,\r\n  500: #cddc39,\r\n  600: #c0ca33,\r\n  700: #afb42b,\r\n  800: #9e9d24,\r\n  900: #827717,\r\n  A100: #f4ff81,\r\n  A200: #eeff41,\r\n  A400: #c6ff00,\r\n  A700: #aeea00,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: $black-87-opacity,\r\n    800: $black-87-opacity,\r\n    900: white,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-yellow: (\r\n  50: #fffde7,\r\n  100: #fff9c4,\r\n  200: #fff59d,\r\n  300: #fff176,\r\n  400: #ffee58,\r\n  500: #ffeb3b,\r\n  600: #fdd835,\r\n  700: #fbc02d,\r\n  800: #f9a825,\r\n  900: #f57f17,\r\n  A100: #ffff8d,\r\n  A200: #ffff00,\r\n  A400: #ffea00,\r\n  A700: #ffd600,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: $black-87-opacity,\r\n    800: $black-87-opacity,\r\n    900: $black-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-amber: (\r\n  50: #fff8e1,\r\n  100: #ffecb3,\r\n  200: #ffe082,\r\n  300: #ffd54f,\r\n  400: #ffca28,\r\n  500: #ffc107,\r\n  600: #ffb300,\r\n  700: #ffa000,\r\n  800: #ff8f00,\r\n  900: #ff6f00,\r\n  A100: #ffe57f,\r\n  A200: #ffd740,\r\n  A400: #ffc400,\r\n  A700: #ffab00,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: $black-87-opacity,\r\n    800: $black-87-opacity,\r\n    900: $black-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-orange: (\r\n  50: #fff3e0,\r\n  100: #ffe0b2,\r\n  200: #ffcc80,\r\n  300: #ffb74d,\r\n  400: #ffa726,\r\n  500: #ff9800,\r\n  600: #fb8c00,\r\n  700: #f57c00,\r\n  800: #ef6c00,\r\n  900: #e65100,\r\n  A100: #ffd180,\r\n  A200: #ffab40,\r\n  A400: #ff9100,\r\n  A700: #ff6d00,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: $black-87-opacity,\r\n    800: white,\r\n    900: white,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: black,\r\n  )\r\n);\r\n\r\n$mat-deep-orange: (\r\n  50: #fbe9e7,\r\n  100: #ffccbc,\r\n  200: #ffab91,\r\n  300: #ff8a65,\r\n  400: #ff7043,\r\n  500: #ff5722,\r\n  600: #f4511e,\r\n  700: #e64a19,\r\n  800: #d84315,\r\n  900: #bf360c,\r\n  A100: #ff9e80,\r\n  A200: #ff6e40,\r\n  A400: #ff3d00,\r\n  A700: #dd2c00,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: white,\r\n    600: white,\r\n    700: white,\r\n    800: white,\r\n    900: white,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: white,\r\n    A700: white,\r\n  )\r\n);\r\n\r\n$mat-brown: (\r\n  50: #efebe9,\r\n  100: #d7ccc8,\r\n  200: #bcaaa4,\r\n  300: #a1887f,\r\n  400: #8d6e63,\r\n  500: #795548,\r\n  600: #6d4c41,\r\n  700: #5d4037,\r\n  800: #4e342e,\r\n  900: #3e2723,\r\n  A100: #d7ccc8,\r\n  A200: #bcaaa4,\r\n  A400: #8d6e63,\r\n  A700: #5d4037,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: white,\r\n    400: white,\r\n    500: $white-87-opacity,\r\n    600: $white-87-opacity,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: white,\r\n    A700: $white-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-grey: (\r\n  0: #ffffff,\r\n  50: #fafafa,\r\n  100: #f5f5f5,\r\n  200: #eeeeee,\r\n  300: #e0e0e0,\r\n  400: #bdbdbd,\r\n  500: #9e9e9e,\r\n  600: #757575,\r\n  700: #616161,\r\n  800: #424242,\r\n  900: #212121,\r\n  1000: #000000,\r\n  A100: #ffffff,\r\n  A200: #eeeeee,\r\n  A400: #bdbdbd,\r\n  A700: #616161,\r\n  contrast: (\r\n    0: $black-87-opacity,\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $white-87-opacity,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    1000: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $white-87-opacity,\r\n  )\r\n);\r\n\r\n$mat-blue-grey: (\r\n  50: #eceff1,\r\n  100: #cfd8dc,\r\n  200: #b0bec5,\r\n  300: #90a4ae,\r\n  400: #78909c,\r\n  500: #607d8b,\r\n  600: #546e7a,\r\n  700: #455a64,\r\n  800: #37474f,\r\n  900: #263238,\r\n  A100: #cfd8dc,\r\n  A200: #b0bec5,\r\n  A400: #78909c,\r\n  A700: #455a64,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: white,\r\n    500: white,\r\n    600: $white-87-opacity,\r\n    700: $white-87-opacity,\r\n    800: $white-87-opacity,\r\n    900: $white-87-opacity,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: white,\r\n    A700: $white-87-opacity,\r\n  )\r\n);\r\n\r\n\r\n// Background palette for light themes.\r\n$mat-light-theme-background: (\r\n  status-bar: map_get($mat-grey, 300),\r\n  app-bar:    map_get($mat-grey, 100),\r\n  background: map_get($mat-grey, 50),\r\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\r\n  card:       white,\r\n  dialog:     white,\r\n  disabled-button: $black-12-opacity,\r\n  raised-button: white,\r\n  focused-button: $black-6-opacity,\r\n  selected-button: map_get($mat-grey, 300),\r\n  selected-disabled-button: map_get($mat-grey, 400),\r\n  disabled-button-toggle: map_get($mat-grey, 200),\r\n);\r\n\r\n// Background palette for dark themes.\r\n$mat-dark-theme-background: (\r\n  status-bar: black,\r\n  app-bar:    map_get($mat-grey, 900),\r\n  background: #303030,\r\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\r\n  card:       map_get($mat-grey, 800),\r\n  dialog:     map_get($mat-grey, 800),\r\n  disabled-button: $white-12-opacity,\r\n  raised-button: map-get($mat-grey, 800),\r\n  focused-button: $white-6-opacity,\r\n  selected-button: map_get($mat-grey, 900),\r\n  selected-disabled-button: map_get($mat-grey, 800),\r\n  disabled-button-toggle: map_get($mat-grey, 1000),\r\n);\r\n\r\n// Foreground palette for light themes.\r\n$mat-light-theme-foreground: (\r\n  base:            black,\r\n  divider:         $black-12-opacity,\r\n  dividers:        $black-12-opacity,\r\n  disabled:        rgba(black, 0.38),\r\n  disabled-button: rgba(black, 0.38),\r\n  disabled-text:   rgba(black, 0.38),\r\n  hint-text:       rgba(black, 0.38),\r\n  secondary-text:  rgba(black, 0.54),\r\n  icon:            rgba(black, 0.54),\r\n  icons:           rgba(black, 0.54),\r\n  text:            rgba(black, 0.87)\r\n);\r\n\r\n// Foreground palette for dark themes.\r\n$mat-dark-theme-foreground: (\r\n  base:            white,\r\n  divider:         $white-12-opacity,\r\n  dividers:        $white-12-opacity,\r\n  disabled:        rgba(white, 0.3),\r\n  disabled-button: rgba(white, 0.3),\r\n  disabled-text:   rgba(white, 0.3),\r\n  hint-text:       rgba(white, 0.3),\r\n  secondary-text:  rgba(white, 0.7),\r\n  icon:            white,\r\n  icons:           white,\r\n  text:            white\r\n);\r\n","@import '../theming/palette';\r\n@import '../theming/theming';\r\n\r\n@mixin mat-option-theme($theme) {\r\n  $foreground: map-get($theme, foreground);\r\n  $background: map-get($theme, background);\r\n  $primary: map-get($theme, primary);\r\n\r\n  .mat-option {\r\n    &:hover:not(.mat-option-disabled), &:focus:not(.mat-option-disabled) {\r\n      background: mat-color($background, hover);\r\n    }\r\n\r\n    &.mat-selected {\r\n      color: mat-color($primary);\r\n\r\n      // In multiple mode there is a checkbox to show that the option is selected.\r\n      &:not(.mat-option-multiple) {\r\n        background: mat-color($background, hover);\r\n      }\r\n    }\r\n\r\n    &.mat-active {\r\n      background: mat-color($background, hover);\r\n      color: mat-color($foreground, text);\r\n    }\r\n\r\n    &.mat-option-disabled {\r\n      color: mat-color($foreground, hint-text);\r\n    }\r\n\r\n  }\r\n}\r\n","@import '../../theming/theming';\r\n\r\n\r\n@mixin mat-pseudo-checkbox-theme($theme) {\r\n  $is-dark-theme: map-get($theme, is-dark);\r\n  $primary: map-get($theme, primary);\r\n  $accent: map-get($theme, accent);\r\n  $warn: map-get($theme, warn);\r\n  $background: map-get($theme, background);\r\n\r\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\r\n  // this does not work well with elements layered on top of one another. To get around this we\r\n  // blend the colors together based on the base color and the theme background.\r\n  $white-30pct-opacity-on-dark: #686868;\r\n  $black-26pct-opacity-on-light: #b0b0b0;\r\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\r\n\r\n  .mat-pseudo-checkbox {\r\n    color: mat-color(map-get($theme, foreground), secondary-text);\r\n\r\n    &::after {\r\n      color: mat-color($background, background);\r\n    }\r\n  }\r\n\r\n  .mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate {\r\n    &.mat-primary {\r\n      background: mat-color($primary, 500);\r\n    }\r\n\r\n    &.mat-accent {\r\n      background: mat-color($accent, 500);\r\n    }\r\n\r\n    &.mat-warn {\r\n      background: mat-color($warn, 500);\r\n    }\r\n\r\n    &.mat-pseudo-checkbox-disabled {\r\n      background: $disabled-color;\r\n    }\r\n  }\r\n}\r\n"]}