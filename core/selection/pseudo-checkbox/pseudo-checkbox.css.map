{"version":3,"sources":["core/selection/pseudo-checkbox/pseudo-checkbox.scss","core/style/_variables.scss","core/style/_checkbox-common.scss"],"names":[],"mappings":"AASA,qBACE,MC2BgB,KD1BhB,OC0BgB,KDzBhB,OEN0B,IFMS,MACnC,cAAe,IACf,OAAQ,QACR,QAAS,aACT,eAAgB,OAChB,WAAY,WACZ,SAAU,SACV,WACI,aEX6B,KDkCM,uBAA4B,CDtB/D,iBEZ6B,KDkCM,wBDlCzC,4BAgBI,SAAU,SACV,QAAS,EACT,QAAS,GACT,cEtBwB,IFsBkB,MAAM,aAChD,WAAY,QEpBmB,KDkCM,wBDlCzC,iDAAA,uDAwBI,OAAQ,KAIZ,8BACE,OAAQ,QAGV,0CACE,IAAK,IACL,KErC0B,IFsC1B,MAAO,KACP,QAAS,EAGX,oCACE,IAAK,IACL,KAAM,IACN,MA7C2B,KA8C3B,OAAQ,IACR,YE/C0B,IF+Cc,MAAM,aAC9C,UAAW,eACX,QAAS","file":"pseudo-checkbox.css","sourcesContent":["@import '../../style/checkbox-common';\r\n\r\n// Padding inside of a pseudo checkbox.\r\n$_mat-pseudo-checkbox-padding: $mat-checkbox-border-width * 2;\r\n\r\n// Size of the checkmark in a pseudo checkbox.\r\n$_mat-pseudo-checkmark-size: $mat-checkbox-size - (2 * $_mat-pseudo-checkbox-padding);\r\n\r\n\r\n.mat-pseudo-checkbox {\r\n  width: $mat-checkbox-size;\r\n  height: $mat-checkbox-size;\r\n  border: $mat-checkbox-border-width solid;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  transition:\r\n      border-color $mat-checkbox-transition-duration $mat-linear-out-slow-in-timing-function,\r\n      background-color $mat-checkbox-transition-duration $mat-linear-out-slow-in-timing-function;\r\n\r\n  // Used to render the checkmark/mixedmark inside of the box.\r\n  &::after {\r\n    position: absolute;\r\n    opacity: 0;\r\n    content: '';\r\n    border-bottom: $mat-checkbox-border-width solid currentColor;\r\n    transition: opacity $mat-checkbox-transition-duration $mat-linear-out-slow-in-timing-function;\r\n  }\r\n\r\n  &.mat-pseudo-checkbox-checked, &.mat-pseudo-checkbox-indeterminate {\r\n    border: none;\r\n  }\r\n}\r\n\r\n.mat-pseudo-checkbox-disabled {\r\n  cursor: default;\r\n}\r\n\r\n.mat-pseudo-checkbox-indeterminate::after {\r\n  top: ($mat-checkbox-size - $mat-checkbox-border-width) / 2;\r\n  left: $mat-checkbox-border-width;\r\n  width: $mat-checkbox-size - ($mat-checkbox-border-width * 2);\r\n  opacity: 1;\r\n}\r\n\r\n.mat-pseudo-checkbox-checked::after {\r\n  top: ($mat-checkbox-size / 2) - ($_mat-pseudo-checkmark-size / 4) - ($mat-checkbox-size / 10);\r\n  left: $_mat-pseudo-checkbox-padding - $mat-checkbox-border-width / 2;\r\n  width: $_mat-pseudo-checkmark-size;\r\n  height: ($_mat-pseudo-checkmark-size - $mat-checkbox-border-width) / 2;\r\n  border-left: $mat-checkbox-border-width solid currentColor;\r\n  transform: rotate(-45deg);\r\n  opacity: 1;\r\n}\r\n","@import '../typography/typography';\r\n\r\n\r\n// Typography\r\n$mat-body-font-size-base: rem(1.4) !default;\r\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\r\n\r\n// Media queries\r\n// TODO: Find a way to respect media query ranges.\r\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\r\n$mat-xsmall: 'max-width: 600px';\r\n$mat-small: 'max-width: 960px';\r\n\r\n// TODO: Revisit all z-indices before beta\r\n// z-index master list\r\n\r\n$z-index-fab: 20 !default;\r\n$z-index-drawer: 100 !default;\r\n\r\n// Overlay z indices.\r\n\r\n// We want overlays to always appear over user content, so set a baseline\r\n// very high z-index for the overlay container, which is where we create the new\r\n// stacking context for all overlays.\r\n$cdk-z-index-overlay-container: 1000;\r\n$cdk-z-index-overlay: 1000;\r\n$cdk-z-index-overlay-backdrop: 1000;\r\n\r\n// Background color for all of the backdrops\r\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\r\n\r\n// Global constants\r\n$pi: 3.14159265;\r\n\r\n// Padding between input toggles and their labels\r\n$mat-toggle-padding: 8px !default;\r\n// Width and height of input toggles\r\n$mat-toggle-size: 20px !default;\r\n\r\n// Easing Curves\r\n// TODO(jelbourn): all of these need to be revisited\r\n\r\n// The default animation curves used by material design.\r\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\r\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\r\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\r\n\r\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n\r\n$swift-ease-out-duration: 400ms !default;\r\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\r\n\r\n$swift-ease-in-duration: 300ms !default;\r\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\r\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\r\n\r\n$swift-ease-in-out-duration: 500ms !default;\r\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\r\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\r\n\r\n$swift-linear-duration: 80ms !default;\r\n$swift-linear-timing-function: linear !default;\r\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\r\n","@import './variables';\r\n\r\n// The width/height of the checkbox element.\r\n$mat-checkbox-size: $mat-toggle-size !default;\r\n\r\n// The width of the checkbox border shown when the checkbox is unchecked.\r\n$mat-checkbox-border-width: 2px;\r\n\r\n// The base duration used for the majority of transitions for the checkbox.\r\n$mat-checkbox-transition-duration: 90ms;\r\n"]}