{"version":3,"file":"features.js","sourceRoot":"","sources":["../../../../src/lib/core/platform/features.ts"],"names":[],"mappings":"AAAA,IAAI,mBAAgC,CAAC;AAErC,0DAA0D;AAC1D,MAAM;IACJ,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACzB,IAAI,kBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACvD,mBAAmB,GAAG,IAAI,GAAG,CAAC;YAC5B,4FAA4F;YAC5F,uCAAuC;YACvC,kEAAkE;YAClE,8EAA8E;YAC9E,OAAO;YACP,QAAQ;YACR,UAAU;YACV,MAAM;YACN,gBAAgB;YAChB,OAAO;YACP,MAAM;YACN,QAAQ;YACR,OAAO;YACP,OAAO;YACP,QAAQ;YACR,UAAU;YACV,OAAO;YACP,OAAO;YACP,OAAO;YACP,QAAQ;YACR,QAAQ;YACR,KAAK;YACL,MAAM;YACN,MAAM;YACN,KAAK;YACL,MAAM;SACP,CAAC,MAAM,CAAC,UAAA,KAAK;YACZ,kBAAgB,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,kBAAgB,CAAC,IAAI,KAAK,KAAK,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACD,MAAM,CAAC,mBAAmB,CAAC;AAC7B,CAAC","sourcesContent":["let supportedInputTypes: Set<string>;\r\n\r\n/** @returns The input types supported by this browser. */\r\nexport function getSupportedInputTypes(): Set<string> {\r\n  if (!supportedInputTypes) {\r\n    let featureTestInput = document.createElement('input');\r\n    supportedInputTypes = new Set([\r\n      // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\r\n      // first changing it to something else:\r\n      // The specified value \"\" does not conform to the required format.\r\n      // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\r\n      'color',\r\n      'button',\r\n      'checkbox',\r\n      'date',\r\n      'datetime-local',\r\n      'email',\r\n      'file',\r\n      'hidden',\r\n      'image',\r\n      'month',\r\n      'number',\r\n      'password',\r\n      'radio',\r\n      'range',\r\n      'reset',\r\n      'search',\r\n      'submit',\r\n      'tel',\r\n      'text',\r\n      'time',\r\n      'url',\r\n      'week',\r\n    ].filter(value => {\r\n      featureTestInput.setAttribute('type', value);\r\n      return featureTestInput.type === value;\r\n    }));\r\n  }\r\n  return supportedInputTypes;\r\n}\r\n"]}