{"version":3,"file":"portal-directives.js","sourceRoot":"","sources":["../../../../src/lib/core/portal/portal-directives.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,EACH,QAAQ,EAGR,SAAS,EACT,WAAW,EACX,wBAAwB,EACxB,gBAAgB,EAEhB,KAAK,GACR,MAAM,eAAe,CAAC;AACvB,OAAO,EAAS,cAAc,EAAmB,cAAc,EAAC,MAAM,UAAU,CAAC;AAGjF;;;;;;;;GAQG;AAKH,IAAa,uBAAuB;IAAS,2CAAc;IACzD,iCAAY,WAA6B,EAAE,gBAAkC;eAC3E,kBAAM,WAAW,EAAE,gBAAgB,CAAC;IACtC,CAAC;IACH,8BAAC;AAAD,CAAC,AAJD,CAA6C,cAAc,GAI1D;AAJY,uBAAuB;IAJnC,SAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,QAAQ,EAAE,WAAW;KACtB,CAAC;qCAEyB,WAAW,EAAyB,gBAAgB;GADlE,uBAAuB,CAInC;SAJY,uBAAuB;AAOpC;;;;;;GAMG;AAKH,IAAa,mBAAmB;IAAS,uCAAc;IAIrD,6BACY,yBAAmD,EACnD,iBAAmC;QAF/C,YAGE,iBAAO,SACR;QAHW,+BAAyB,GAAzB,yBAAyB,CAA0B;QACnD,uBAAiB,GAAjB,iBAAiB,CAAkB;;IAE/C,CAAC;IAID,sBAAI,kDAAiB;QAFrB,kBAAkB;aAElB,cAA0B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aAC/C,UAAsB,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;;OADE;IAI/C,sBAAI,uCAAM;QADV,8CAA8C;aAC9C;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,MAAmB;YAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACvB,iBAAM,MAAM,WAAE,CAAC;YACjB,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,iBAAM,MAAM,YAAC,MAAM,CAAC,CAAC;YACvB,CAAC;YAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC;;;OAZA;IAcD,yCAAW,GAAX;QACE,iBAAM,OAAO,WAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACH,mDAAqB,GAArB,UAAyB,MAA0B;QACjD,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAE7B,uFAAuF;QACvF,0EAA0E;QAC1E,IAAI,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,IAAI;YAClD,MAAM,CAAC,gBAAgB;YACvB,IAAI,CAAC,iBAAiB,CAAC;QAE3B,IAAI,gBAAgB,GAChB,IAAI,CAAC,yBAAyB,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,GAAG,GAAG,gBAAgB,CAAC,eAAe,CACtC,gBAAgB,EAAE,gBAAgB,CAAC,MAAM,EACzC,MAAM,CAAC,QAAQ,IAAI,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAExD,iBAAM,YAAY,YAAC,cAAM,OAAA,GAAG,CAAC,OAAO,EAAE,EAAb,CAAa,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED;;;OAGG;IACH,kDAAoB,GAApB,UAAqB,MAAsB;QAA3C,iBAUC;QATC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC9D,iBAAM,YAAY,YAAC,cAAM,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAA9B,CAA8B,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,0CAA0C;QAC1C,MAAM,CAAC,IAAI,GAAG,EAAe,CAAC;IAChC,CAAC;IACH,0BAAC;AAAD,CAAC,AA9ED,CAAyC,cAAc,GA8EtD;AAlEC;IADC,KAAK,CAAC,YAAY,CAAC;;;4DAC2B;AAZpC,mBAAmB;IAJ/B,SAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;QACzC,MAAM,EAAE,CAAC,uBAAuB,CAAC;KAClC,CAAC;qCAMuC,wBAAwB;QAChC,gBAAgB;GANpC,mBAAmB,CA8E/B;SA9EY,mBAAmB;AAqFhC,IAAa,YAAY;IAAzB;IAQA,CAAC;IAPC,kBAAkB;IACX,oBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,cAAY;YACtB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AARD,IAQC;AARY,YAAY;IAJxB,QAAQ,CAAC;QACR,OAAO,EAAE,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;QACvD,YAAY,EAAE,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;KAC7D,CAAC;GACW,YAAY,CAQxB;SARY,YAAY","sourcesContent":["import {\r\n    NgModule,\r\n    ModuleWithProviders,\r\n    ComponentRef,\r\n    Directive,\r\n    TemplateRef,\r\n    ComponentFactoryResolver,\r\n    ViewContainerRef,\r\n    OnDestroy,\r\n    Input,\r\n} from '@angular/core';\r\nimport {Portal, TemplatePortal, ComponentPortal, BasePortalHost} from './portal';\r\n\r\n\r\n/**\r\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\r\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\r\n *\r\n * Usage:\r\n * <ng-template portal #greeting>\r\n *   <p> Hello {{name}} </p>\r\n * </ng-template>\r\n */\r\n@Directive({\r\n  selector: '[cdk-portal], [portal]',\r\n  exportAs: 'cdkPortal',\r\n})\r\nexport class TemplatePortalDirective extends TemplatePortal {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\r\n * directly attached to it, enabling declarative use.\r\n *\r\n * Usage:\r\n * <ng-template [cdkPortalHost]=\"greeting\"></ng-template>\r\n */\r\n@Directive({\r\n  selector: '[cdkPortalHost], [portalHost]',\r\n  inputs: ['portal: cdkPortalHost']\r\n})\r\nexport class PortalHostDirective extends BasePortalHost implements OnDestroy {\r\n  /** The attached portal. */\r\n  private _portal: Portal<any>;\r\n\r\n  constructor(\r\n      private _componentFactoryResolver: ComponentFactoryResolver,\r\n      private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input('portalHost')\r\n  get _deprecatedPortal() { return this.portal; }\r\n  set _deprecatedPortal(v) { this.portal = v; }\r\n\r\n  /** Portal associated with the Portal host. */\r\n  get portal(): Portal<any> {\r\n    return this._portal;\r\n  }\r\n\r\n  set portal(portal: Portal<any>) {\r\n    if (this.hasAttached()) {\r\n      super.detach();\r\n    }\r\n\r\n    if (portal) {\r\n      super.attach(portal);\r\n    }\r\n\r\n    this._portal = portal;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.dispose();\r\n    this._portal = null;\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\r\n   *\r\n   * @param portal Portal to be attached to the portal host.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    portal.setAttachedHost(this);\r\n\r\n    // If the portal specifies an origin, use that as the logical location of the component\r\n    // in the application tree. Otherwise use the location of this PortalHost.\r\n    let viewContainerRef = portal.viewContainerRef != null ?\r\n        portal.viewContainerRef :\r\n        this._viewContainerRef;\r\n\r\n    let componentFactory =\r\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\r\n    let ref = viewContainerRef.createComponent(\r\n        componentFactory, viewContainerRef.length,\r\n        portal.injector || viewContainerRef.parentInjector);\r\n\r\n    super.setDisposeFn(() => ref.destroy());\r\n    this._portal = portal;\r\n\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * Attach the given TemplatePortal to this PortlHost as an embedded View.\r\n   * @param portal Portal to be attached.\r\n   */\r\n  attachTemplatePortal(portal: TemplatePortal): Map<string, any> {\r\n    portal.setAttachedHost(this);\r\n\r\n    this._viewContainerRef.createEmbeddedView(portal.templateRef);\r\n    super.setDisposeFn(() => this._viewContainerRef.clear());\r\n\r\n    this._portal = portal;\r\n\r\n    // TODO(jelbourn): return locals from view\r\n    return new Map<string, any>();\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  exports: [TemplatePortalDirective, PortalHostDirective],\r\n  declarations: [TemplatePortalDirective, PortalHostDirective],\r\n})\r\nexport class PortalModule {\r\n  /** @deprecated */\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: PortalModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}