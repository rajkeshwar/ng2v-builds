{"version":3,"file":"year-view.js","sourceRoot":"","sources":["../../../src/lib/datepicker/year-view.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ElementRef,\r\n  Input,\r\n  AfterContentInit,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { DateLocale } from './date-locale';\r\nimport { DateUtil } from './date-util';\r\n\r\n\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-year-view',\r\n  templateUrl: 'year-view.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Md2YearView implements AfterContentInit {\r\n  /** The date to display in this year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate() { return this._activeDate; }\r\n  set activeDate(value) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = this._locale.parseDate(value) || this._util.today();\r\n    this._activeYear = this._getYearInCurrentDate(this._activeDate);\r\n    if (oldActiveDate.getFullYear() != this._activeDate.getFullYear()) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate = this._util.today();\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected() { return this._selected; }\r\n  set selected(value) {\r\n    this._selected = this._locale.parseDate(value);\r\n    this._selectedYear = this._getYearInCurrentDate(this.selected);\r\n  }\r\n  private _selected: Date;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): Date { return this._minDate; };\r\n  set minDate(date: Date) { this._minDate = this._locale.parseDate(date); }\r\n  private _minDate: Date;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): Date { return this._maxDate; };\r\n  set maxDate(date: Date) { this._maxDate = this._locale.parseDate(date); }\r\n  private _maxDate: Date;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: Date) => boolean;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() selectedChange = new EventEmitter<Date>();\r\n\r\n  /** Grid of calendar cells representing the months of the year. */\r\n  _years: Array<number>;\r\n\r\n  /**\r\n   * The month in this year that the selected Date falls on.\r\n   * Null if the selected Date is in a different year.\r\n   */\r\n  _selectedYear: number;\r\n  _activeYear: number;\r\n\r\n  constructor(private _element: ElementRef,\r\n    private _locale: DateLocale, private _util: DateUtil) { }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new month is selected. */\r\n  _yearSelected(year: number) {\r\n    this.selectedChange.emit(new Date(year, this.activeDate.getMonth(), this._activeDate.getDate(),\r\n      this.activeDate.getHours(), this.activeDate.getMinutes(), this.activeDate.getSeconds()));\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedYear = this._getYearInCurrentDate(this.selected);\r\n    this._createYears();\r\n  }\r\n\r\n  /** Create years. */\r\n  private _createYears() {\r\n    let startYear = this._minDate ? this._minDate.getFullYear() : 1900;\r\n    let endYear = this._maxDate ? this._maxDate.getFullYear() :\r\n      this._util.today().getFullYear() + 100;\r\n    this._years = [];\r\n    for (let i = startYear; i <= endYear; i++) {\r\n      this._years.push(i);\r\n    }\r\n    this._setScrollTop();\r\n  }\r\n\r\n  /** Set Scroll of the years container. */\r\n  private _setScrollTop(): void {\r\n    setTimeout(() => {\r\n      const scrollContainer =\r\n        this._element.nativeElement;\r\n      const selectedIndex = (this._selectedYear ? this._selectedYear : this._activeYear) - 1900;\r\n      scrollContainer.scrollTop = 20 + (selectedIndex * 40) - (scrollContainer.clientHeight / 2);\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n   * Gets the month in this year that the given Date falls on.\r\n   * Returns null if the given Date is in another year.\r\n   */\r\n  private _getYearInCurrentDate(date: Date) {\r\n    return date ? date.getFullYear() : null;\r\n  }\r\n}\r\n"]}