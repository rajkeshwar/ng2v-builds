{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../src/lib/datepicker/calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { DateUtil } from './date-util';\r\nimport { DateLocale } from './date-locale';\r\nimport {\r\n  DOWN_ARROW,\r\n  END, ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW\r\n} from '../core/keyboard/keycodes';\r\n\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-calendar',\r\n  templateUrl: 'calendar.html',\r\n  styleUrls: ['calendar.css'],\r\n  host: {\r\n    '[class.md2-calendar]': 'true',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Md2Calendar implements AfterContentInit {\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input()\r\n  get startAt() { return this._startAt; }\r\n  set startAt(value: any) { this._startAt = this._locale.parseDate(value); }\r\n  private _startAt: Date;\r\n\r\n  /** Whether the calendar should be started in month or year view. */\r\n  @Input() startView: 'month' | 'year' = 'month';\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected() { return this._selected; }\r\n  set selected(value: any) { this._selected = this._locale.parseDate(value); }\r\n  private _selected: Date;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): Date { return this._minDate; };\r\n  set minDate(date: Date) { this._minDate = this._locale.parseDate(date); }\r\n  private _minDate: Date;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): Date { return this._maxDate; };\r\n  set maxDate(date: Date) { this._maxDate = this._locale.parseDate(date); }\r\n  private _maxDate: Date;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: Date) => boolean;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<Date>();\r\n\r\n  /** Date filter for the month and year views. */\r\n  _dateFilterForViews = (date: Date) => {\r\n    return !!date &&\r\n      (!this.dateFilter || this.dateFilter(date)) &&\r\n      (!this.minDate || this._util.isSameDay(date, this.minDate)) &&\r\n      (!this.maxDate || this._util.isSameDay(date, this.maxDate));\r\n  }\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get _activeDate() { return this._clampedActiveDate; }\r\n  set _activeDate(value: Date) {\r\n    this._clampedActiveDate = this._util.clampDate(value, this.minDate, this.maxDate);\r\n  }\r\n  private _clampedActiveDate: Date;\r\n\r\n  /** Whether the calendar is in month view. */\r\n  _monthView: boolean;\r\n\r\n  /** The label for the current calendar view. */\r\n  get _label(): string {\r\n    return this._monthView ?\r\n      this._locale.getCalendarMonthHeaderLabel(this._activeDate) :\r\n      this._locale.getCalendarYearHeaderLabel(this._activeDate);\r\n  }\r\n\r\n  constructor(private _locale: DateLocale, private _util: DateUtil) { }\r\n\r\n  ngAfterContentInit() {\r\n    this._activeDate = this.startAt || this._util.today();\r\n    this._monthView = this.startView != 'year';\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: Date): void {\r\n    if ((!date || !this.selected) && date != this.selected ||\r\n      this._util.isSameDay(date, this.selected)) {\r\n      this.selectedChange.emit(date);\r\n    }\r\n  }\r\n\r\n  /** Handles month selection in the year view. */\r\n  _monthSelected(month: Date): void {\r\n    this._activeDate = month;\r\n    this._monthView = true;\r\n  }\r\n\r\n  /** Handles user clicks on the period label. */\r\n  _currentPeriodClicked(): void {\r\n    this._monthView = !this._monthView;\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._activeDate = this._monthView ?\r\n      this._util.incrementMonths(this._activeDate, -1) :\r\n      this._util.incrementYears(this._activeDate, -1);\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._activeDate = this._monthView ?\r\n      this._util.incrementMonths(this._activeDate, 1) :\r\n      this._util.incrementYears(this._activeDate, 1);\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: Date, date2: Date): boolean {\r\n    return this._monthView ?\r\n      date1.getFullYear() == date2.getFullYear() && date1.getMonth() == date2.getMonth() :\r\n      date1.getFullYear() == date2.getFullYear();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n    if (this._monthView) {\r\n      this._handleCalendarBodyKeydownInMonthView(event);\r\n    } else {\r\n      this._handleCalendarBodyKeydownInYearView(event);\r\n    }\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._util.incrementDays(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._util.incrementDays(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._util.incrementDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._util.incrementDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._util.getFirstDateOfMonth(this._activeDate);\r\n        break;\r\n      case END:\r\n        this._activeDate = this._util.getLastDateOfMonth(this._activeDate);\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = event.altKey ?\r\n          this._util.incrementYears(this._activeDate, -1) :\r\n          this._util.incrementMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = event.altKey ?\r\n          this._util.incrementYears(this._activeDate, 1) :\r\n          this._util.incrementMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (this._dateFilterForViews(this._activeDate)) {\r\n          this._dateSelected(this._activeDate);\r\n          break;\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._util.incrementMonths(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._util.incrementMonths(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._util.incrementMonths(this._activeDate,\r\n          -this._activeDate.getMonth());\r\n        break;\r\n      case END:\r\n        this._activeDate = this._util.incrementMonths(this._activeDate,\r\n          11 - this._activeDate.getMonth());\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = this._util.incrementYears(this._activeDate, event.altKey ? -10 : -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = this._util.incrementYears(this._activeDate, event.altKey ? 10 : 1);\r\n        break;\r\n      case ENTER:\r\n        this._monthSelected(this._activeDate);\r\n        break;\r\n      default:\r\n        // Don't prevent default on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes before the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _prevMonthInSameCol(date: Date) {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    let increment = date.getMonth() <= 4 ? -5 : (date.getMonth() >= 7 ? -7 : -12);\r\n    return this._util.incrementMonths(date, increment);\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes after the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _nextMonthInSameCol(date: Date): Date {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    let increment = date.getMonth() <= 4 ? 7 : (date.getMonth() >= 7 ? 5 : 12);\r\n    return this._util.incrementMonths(date, increment);\r\n  }\r\n}\r\n"]}