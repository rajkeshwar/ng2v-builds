{"version":3,"file":"month-view.js","sourceRoot":"","sources":["../../../src/lib/datepicker/month-view.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  AfterContentInit\r\n} from '@angular/core';\r\nimport { DateLocale } from './date-locale';\r\nimport { DateUtil } from './date-util';\r\n\r\n\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nexport class Md2CalendarCell {\r\n  constructor(public value: number, public displayValue: string, public enabled: boolean) { }\r\n}\r\n\r\n\r\nconst DAYS_PER_WEEK = 7;\r\n\r\n\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-month-view',\r\n  templateUrl: 'month-view.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Md2MonthView implements AfterContentInit {\r\n  /**\r\n   * The date to display in this month view (everything other than the month and year is ignored).\r\n   */\r\n  @Input()\r\n  get activeDate() { return this._activeDate; }\r\n  set activeDate(value) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = this._locale.parseDate(value) || this._util.today();\r\n    if (!this._util.isSameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate = this._util.today();\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected() { return this._selected; }\r\n  set selected(value) {\r\n    this._selected = this._locale.parseDate(value);\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n  }\r\n  private _selected: Date;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: Date) => boolean;\r\n\r\n  /** Emits when a new date is selected. */\r\n  @Output() selectedChange = new EventEmitter<Date>();\r\n\r\n  /** Handles when a new date is selected. */\r\n  _cellClicked(cell: Md2CalendarCell): void {\r\n    if (!cell.enabled || this._selectedDate == cell.value) {\r\n      return;\r\n    }\r\n    this.selectedChange.emit(new Date(this.activeDate.getFullYear(), this.activeDate.getMonth(),\r\n      cell.value, this.activeDate.getHours(), this.activeDate.getMinutes(),\r\n      this.activeDate.getSeconds()));\r\n  }\r\n\r\n  /** The number of blank cells to put at the beginning for the first row. */\r\n  get _firstRowOffset(): number {\r\n    return this._weeks && this._weeks.length && this._weeks[0].length ?\r\n      DAYS_PER_WEEK - this._weeks[0].length : 0;\r\n  }\r\n\r\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n    let cellNumber = rowIndex * DAYS_PER_WEEK + colIndex;\r\n\r\n    // Account for the fact that the first row may not have as many cells.\r\n    if (rowIndex) {\r\n      cellNumber -= this._firstRowOffset;\r\n    }\r\n\r\n    return cellNumber == this.activeDate.getDate() - 1;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /** Grid of calendar cells representing the dates of the month. */\r\n  _weeks: Md2CalendarCell[][];\r\n\r\n  /** The number of blank cells in the first row before the 1st of the month. */\r\n  _firstWeekOffset: number;\r\n\r\n  /** The names of the weekdays. */\r\n  _weekdays: string[];\r\n\r\n  /**\r\n   * The date of the month that the currently selected Date falls on.\r\n   * Null if the currently selected Date is in another month.\r\n   */\r\n  _selectedDate: number;\r\n\r\n  /** The date of the month that today falls on. Null if today is in another month. */\r\n  _todayDate: number;\r\n\r\n  constructor(private _locale: DateLocale, private _util: DateUtil) {\r\n    this._weekdays = this._locale.narrowDays.slice(this._locale.firstDayOfWeek)\r\n      .concat(this._locale.narrowDays.slice(0, this._locale.firstDayOfWeek));\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._init();\r\n  }\r\n\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n    this._todayDate = this._getDateInCurrentMonth(this._util.today());\r\n\r\n    let firstOfMonth = new Date(this.activeDate.getFullYear(), this.activeDate.getMonth(), 1,\r\n      this.activeDate.getHours(), this.activeDate.getMinutes(), this.activeDate.getSeconds());\r\n    this._firstWeekOffset =\r\n      (DAYS_PER_WEEK + firstOfMonth.getDay() - this._locale.firstDayOfWeek) % DAYS_PER_WEEK;\r\n\r\n    this._createWeekCells();\r\n  }\r\n\r\n  /** Creates Md2CalendarCells for the dates in this month. */\r\n  private _createWeekCells() {\r\n    let daysInMonth = new Date(this.activeDate.getFullYear(),\r\n      this.activeDate.getMonth() + 1, 0).getDate();\r\n    this._weeks = [[]];\r\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++ , cell++) {\r\n      if (cell == DAYS_PER_WEEK) {\r\n        this._weeks.push([]);\r\n        cell = 0;\r\n      }\r\n      let enabled = !this.dateFilter ||\r\n        this.dateFilter(new Date(this.activeDate.getFullYear(), this.activeDate.getMonth(), i + 1));\r\n      this._weeks[this._weeks.length - 1]\r\n        .push(new Md2CalendarCell(i + 1, this._locale.dates[i + 1], enabled));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the date in this month that the given Date falls on.\r\n   * Returns null if the given Date is in another month.\r\n   */\r\n  private _getDateInCurrentMonth(date: Date): number {\r\n    return this._util.isSameMonthAndYear(date, this.activeDate) ? date.getDate() : null;\r\n  }\r\n}\r\n"]}