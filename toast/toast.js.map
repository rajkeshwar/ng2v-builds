{"version":3,"file":"toast.js","sourceRoot":"","sources":["../../../src/lib/toast/toast.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Injectable,\r\n  ViewContainerRef,\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  Overlay,\r\n  OverlayState,\r\n  OverlayRef,\r\n  ComponentPortal,\r\n  OVERLAY_PROVIDERS\r\n} from '../core';\r\n\r\nexport class Toast {\r\n  id: number;\r\n  isVisible: boolean;\r\n  constructor(public message: string) { }\r\n}\r\n\r\nexport class Md2ToastConfig {\r\n  duration: number = 3000;\r\n  viewContainerRef?: ViewContainerRef = null;\r\n}\r\n\r\n@Injectable()\r\nexport class Md2Toast {\r\n  private index: number = 0;\r\n\r\n  _overlayRef: OverlayRef;\r\n  _toastInstance: Md2ToastComponent;\r\n\r\n  constructor(private _overlay: Overlay, private _config: Md2ToastConfig) { }\r\n\r\n  /**\r\n   * toast message\r\n   * @param toast string or object with message and other properties of toast\r\n   */\r\n  toast(message: string, duration?: number) {\r\n    this.show(message, duration);\r\n  }\r\n\r\n  /**\r\n   * show toast\r\n   * @param toastObj string or object with message and other properties of toast\r\n   */\r\n  show(message: string, duration?: number) {\r\n    if (!message || !message.trim()) { return; }\r\n\r\n    if (duration) { this._config.duration = duration; }\r\n\r\n    let toast: Toast;\r\n    toast = new Toast(message);\r\n\r\n    if (toast) {\r\n      if (!this._toastInstance) {\r\n        this._createToast();\r\n      }\r\n\r\n      this._setToastMessage(toast);\r\n    }\r\n  }\r\n\r\n  /** Create the toast to display */\r\n  private _createToast(): void {\r\n    this._createOverlay();\r\n    let portal = new ComponentPortal(Md2ToastComponent, this._config.viewContainerRef);\r\n    this._toastInstance = this._overlayRef.attach(portal).instance;\r\n  }\r\n\r\n  /** Create the overlay config and position strategy */\r\n  private _createOverlay(): void {\r\n    if (!this._overlayRef) {\r\n      let config = new OverlayState();\r\n      config.positionStrategy = this._overlay.position()\r\n        .global()\r\n        .top('0').right('0');\r\n\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n  }\r\n\r\n  /** Disposes the current toast and the overlay it is attached to */\r\n  private _disposeToast(): void {\r\n    this._overlayRef.dispose();\r\n    this._overlayRef = null;\r\n    this._toastInstance = null;\r\n  }\r\n\r\n  /** Updates the toast message and repositions the overlay according to the new message length */\r\n  private _setToastMessage(toast: Toast) {\r\n    toast.id = ++this.index;\r\n    this._toastInstance.addToast(toast);\r\n    setTimeout(() => {\r\n      this.clearToast(toast.id);\r\n    }, this._config.duration);\r\n  }\r\n\r\n  /**\r\n   * clear specific toast\r\n   * @param toastId\r\n   */\r\n  private clearToast(toastId: number) {\r\n    if (this._toastInstance) {\r\n      this._toastInstance.removeToast(toastId);\r\n      setTimeout(() => {\r\n        if (!this._toastInstance.hasToast()) { this._disposeToast(); }\r\n      }, 250);\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clear all toasts\r\n   */\r\n  clearAllToasts() {\r\n    if (this._toastInstance) {\r\n      this._toastInstance.removeAllToasts();\r\n      setTimeout(() => {\r\n        if (!this._toastInstance.hasToast()) { this._disposeToast(); }\r\n      }, 250);\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'md2-toast',\r\n  templateUrl: 'toast.html',\r\n  styleUrls: ['toast.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Md2ToastComponent {\r\n  toasts: Toast[] = [];\r\n  maxShown = 5;\r\n\r\n  /**\r\n   * add toast\r\n   * @param toast toast object with all parameters\r\n   */\r\n  addToast(toast: Toast) {\r\n    setTimeout(() => {\r\n      toast.isVisible = true;\r\n    }, 1);\r\n    this.toasts.push(toast);\r\n    if (this.toasts.length > this.maxShown) {\r\n      this.toasts[0].isVisible = false;\r\n      setTimeout(() => {\r\n        this.toasts.splice(0, (this.toasts.length - this.maxShown));\r\n      }, 250);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove toast\r\n   * @param toastId number of toast id\r\n   */\r\n  removeToast(toastId: number) {\r\n    this.toasts.forEach((t: any) => { if (t.id === toastId) { t.isVisible = false; } });\r\n    setTimeout(() => {\r\n      this.toasts = this.toasts.filter((toast) => { return toast.id !== toastId; });\r\n    }, 250);\r\n  }\r\n\r\n  /**\r\n   * remove all toasts\r\n   * @param toastId number of toast id\r\n   */\r\n  removeAllToasts() {\r\n    this.toasts.forEach((t: any) => { t.isVisible = false; });\r\n    setTimeout(() => {\r\n      this.toasts = [];\r\n    }, 250);\r\n  }\r\n\r\n  /**\r\n   * check has any toast\r\n   * @return boolean\r\n   */\r\n  hasToast(): boolean { return this.toasts.length > 0; }\r\n\r\n}\r\n\r\nexport const MD2_TOAST_DIRECTIVES: any[] = [Md2ToastComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: MD2_TOAST_DIRECTIVES,\r\n  declarations: MD2_TOAST_DIRECTIVES,\r\n  entryComponents: MD2_TOAST_DIRECTIVES,\r\n  providers: [Md2Toast, Md2ToastConfig, OVERLAY_PROVIDERS]\r\n})\r\nexport class Md2ToastModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: Md2ToastModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}